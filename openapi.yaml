openapi: 3.0.0
info:
  title: Utdon API Documentation
  version: 1.5.0
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
    cookieAuth:
      type: apiKey
      in: cookie
      name: connect.sid # cookie name
  responses:
    UnauthorizedError:
      description: Access token,user/password are missing, invalid, or session is not set
  schemas:
    Error:
      type: string
      description: Catched Error as string
    HTTPMethods:
      type: string
      enum:
        - GET
        - POST
        - PUT
        - DELETE
    UptoDateOrNotState:
      type: object
      properties:
        name:
          type: string
          description: name of control
        githubLatestRelease:
          type: string
          description: latest github release after expression applied
        productionVersion:
          type: string
          description: production version after expression applied
        state:
          type: boolean
          description: is Uptodate or Not ?
        strictlyEqual:
          type: boolean
          description: is production strictly equal latest github release ?
        githubLatestReleaseIncludesProductionVersion:
          description: Is github latest release included in Production version?
          type: boolean
        productionVersionIncludesGithubLatestRelease:
          description: Is Production version included in github latest release?
          type: boolean
        urlGitHub:
          type: string
        urlProduction:
          type: string
        ts:
          type: number
          description: Execution timestamp
    UptodateForm:
      type: object
      description: control record
      properties:
        uuid:
          type: string
          description: control uniq id
        name:
          type: string
          description: name of control
        logo:
          type: string
          description: base64 html logo src
        urlProduction:
          type: string
          description: url of the production application to be verified
        scrapTypeProduction:
          type: string
          description: type of content
        exprProduction:
          type: string
          description: Expression to apply to get the version
        urlGitHub:
          type: string
          description: url of the github repository
        exprGithub:
          type: string
          description: Expression to apply to get the version
        urlCronJobMonitoring:
          type: string
          description: url of the cronJob monitoring
        httpMethodCronJobMonitoring:
          $ref: "#/components/schemas/HTTPMethods"
          description: Http method to call url of the cronJob monitoring
        urlCronJobMonitoringAuth:
          type: string
          description: Api Key to provide to call url of the cronJob monitoring
        urlCICD:
          type: string
          description: url of the CI/CD
        httpMethodCICD:
          $ref: "#/components/schemas/HTTPMethods"
          description: Http method to call url of the CI/CD
        urlCICDAuth:
          type: string
          description: Api Key to provide to call url of the CI/CD
        isPause:
          type: boolean
          description: When calling compare API if paused, this control will not be included in the process
        compareResult:
          description: latest compare result
          oneOf:
            - $ref: "#/components/schemas/UptoDateOrNotState"
            - nullable: true
security:
  - ApiKeyAuth: []
  - cookieAuth: []
servers:
  - url: /api/v1
paths:
  /action/compare/{controlUuid}/{setStatus}:
    get:
      summary: Call up the comparison method and can update the monitoring status
      description: Call up the comparison method and can update the monitoring status
      security:
        - ApiKeyAuth: []
        - cookieAuth: []
      tags:
        - Actions
      parameters:
        - in: path
          name: controlUuid
          required: true
          description: control uuid, could be 'all'
          schema:
            type: string
        - in: path
          name: setStatus
          required: true
          description: 1 to update | 0 to not update => monitoring status
          schema:
            type: string
            enum:
              - 0
              - 1
      responses:
        "200":
          description: The response varies according to the parameters provided
          content:
            application/text:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: control uuid not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /action/cicd/:
    put:
      summary: Call up the url CI/CD for control uuid provided
      description: Call up the url CI/CD for control uuid provided
      security:
        - ApiKeyAuth: []
        - cookieAuth: []
      tags:
        - Actions
      requestBody:
        description: uuid
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
      responses:
        "200":
          description: CI/CD response body
          content:
            application/text:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: control uuid not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /action/lastcomparegitrelease/{controlUuid}/:
    get:
      summary: Get the latest github version registered on the control
      description: Get the latest github version registered on the control
      security:
        - ApiKeyAuth: []
        - cookieAuth: []
      tags:
        - Actions
      parameters:
        - in: path
          name: controlUuid
          required: true
          description: control uuid
          schema:
            type: string
      responses:
        "200":
          description: Value of the github release
          content:
            application/text:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: control uuid not found or github release is empty
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /control/{uuid}:
    get:
      summary: To get all the parameters of a control
      description: To get all the parameters of a control; uuid could be 'all' for all controls
      security:
        - ApiKeyAuth: []
      tags:
        - Control
      parameters:
        - in: path
          name: uuid
          required: true
          description: control uuid||all
          schema:
            type: string
      responses:
        "200":
          description: control data or Array of controls data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UptodateForm"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version:
    get:
      summary: To get the application version
      description: Get the version in JSON format
      security: []
      tags:
        - Core
      responses:
        "200":
          description: Version as JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: Major.Minor.Patch
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /healthz:
    get:
      summary: Is service Healthy ?
      description: Could be used to find out if the service is healthy
      security: []
      tags:
        - Core
      responses:
        "204":
          description: service is healthy
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /metrics:
    get:
      summary: not implemented
      description: In the Roadmap
      security:
        - ApiKeyAuth: []
      tags:
        - Core
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "503":
          description: not implemented
